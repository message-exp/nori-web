name: Claude Code Interactive

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

concurrency:
  group: claude-${{ github.event.issue.number || github.event.pull_request.number }}-${{ github.event.comment.id || github.event.review.id || 'issue' }}
  cancel-in-progress: false

jobs:
  claude:
    if: |
      (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
        (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
      ) &&
      github.event.repository.full_name == github.repository &&
      (
        github.event.comment.user.login != 'dependabot[bot]' ||
        github.event.issue.user.login != 'dependabot[bot]' ||
        github.event.review.user.login != 'dependabot[bot]'
      )

    runs-on: ubuntu-latest

    timeout-minutes: 15

    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          allowed_tools: "Bash(npm run lint),Bash(npm run typecheck),Bash(npm run build),Bash(npm run test:unit),Bash(pnpm install),Bash(npm run format:check),Bash(git status),Bash(git log --oneline -10)"

          custom_instructions: |
            You are helping with a React Router + TypeScript project that uses pnpm for package management.

            **Project Context:**
            - This is a TypeScript React application
            - Uses React Router for navigation
            - Package manager: pnpm (prefer pnpm commands over npm)
            - Build tool and linting are configured

            **Coding Standards:**
            - Follow TypeScript strict mode
            - Use functional components with hooks
            - Prefer explicit types over 'any'
            - Follow the project's existing patterns
            - Ensure all new code has appropriate tests

            **Available Commands:**
            - `npm run lint` - Run ESLint
            - `npm run typecheck` - Run TypeScript compiler check
            - `npm run build` - Build the project
            - `npm run test:unit` - Run unit tests
            - `npm run format:check` - Check code formatting

            **Response Guidelines:**
            - Always run relevant checks (lint, typecheck) before making code suggestions
            - Provide specific, actionable feedback
            - Include code examples when helpful
            - Be encouraging to new contributors
            - If you find issues, suggest specific fixes

            **Security Considerations:**
            - Don't execute arbitrary commands not in the allowed list
            - Validate any file changes carefully
            - Be cautious with git operations

          claude_env: |
            NODE_ENV: development
            FORCE_COLOR: 1

      - name: Handle Claude Errors
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            const comment_body = `
            ⚠️ **Claude Execution Failed**

            I encountered an error while processing your @claude request. This could be due to:
            - API rate limits
            - Network connectivity issues
            - Invalid command or syntax

            Please try again in a few minutes. If the issue persists, contact the maintainers.
            `;

            if (issue_number) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: comment_body
              });
            }
